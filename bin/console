#!/bin/bash

source .env

NC='\033[0m' # No Color
YELLOW='\033[0;33m'
GREEN='\033[0;32m'
BLUE='\033[1;34m'

OPTION="${1}"

case ${OPTION} in
   "start")
      docker-compose up -d
      ;;
   "restart")
      docker-compose up -d --force-recreate --renew-anon-volumes --build
      ;;
   "stop")
      docker-compose stop
      ;;
   "logs")
      docker-compose logs -f -t $APP_NAME
      ;;
   "npm")
      docker exec -it $APP_NAME npm ${2} ${3} ${4} ${5}
      ;;
   "test")
      docker exec -it $APP_NAME npm run test
      ;;
   "lint")
      docker exec -it $APP_NAME npm run lint
      ;;
   "deploy")
      CMD="rsync -av -e ssh --progress --compress --delete-before --delete-excluded "

      if [ "$4" = "--prod" ] || [ "$5" = "--prod" ];
      then
        CMD+="--include='build/***' --exclude='*' ./ ${2}@${3}:"
      else
        CMD+="--exclude='node_modules' --exclude='.git*' --exclude='build' --exclude='.env.*' ./ ${2}@${3}:"
      fi

      if [ "$4" ] && [ "$4" != "--prod" ];
      then
        CMD+=$4
      else
        CMD+="~/${APP_NAME}"
      fi

      eval $CMD

      if [ "$4" != "--prod" ] || [ "$5" != "--prod" ];
      then
        eval "ssh ${2}@${3} 'cd ${APP_NAME}; bin/console restart'"
      fi
      ;;
   *)
      echo -e "${BLUE}Console Tool${NC} \n"
      echo -e "${YELLOW}Usage:${NC} \n"
      echo -e "  ${NC}command [argument] \n"
      echo -e "${YELLOW}Available commands:${NC} \n"
      echo -e "  ${GREEN}start     ${NC}start the app into docker container"
      echo -e "  ${GREEN}restart   ${NC}restart the app"
      echo -e "  ${GREEN}stop      ${NC}stop the container"
      echo -e "  ${GREEN}logs      ${NC}show app logs"
      echo -e "  ${GREEN}npm       ${NC}expose npm from container"
      echo -e "  ${GREEN}test      ${NC}run test from container"
      echo -e "  ${GREEN}lint      ${NC}lint src app folder"
      echo -e "  ${GREEN}deploy    ${NC}deploy app on server"
      exit 1
      ;;
esac
